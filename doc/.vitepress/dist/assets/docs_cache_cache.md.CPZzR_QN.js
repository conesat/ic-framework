import{_ as i,c as e,o as s,ae as l}from"./chunks/framework.Dgg8-8ov.js";const k=JSON.parse('{"title":"缓存体系说明（cache 模块）","description":"","frontmatter":{},"headers":[],"relativePath":"docs/cache/cache.md","filePath":"docs/cache/cache.md"}'),t={name:"docs/cache/cache.md"};function h(n,a,c,r,o,p){return s(),e("div",null,a[0]||(a[0]=[l(`<h1 id="缓存体系说明-cache-模块" tabindex="-1">缓存体系说明（cache 模块） <a class="header-anchor" href="#缓存体系说明-cache-模块" aria-label="Permalink to &quot;缓存体系说明（cache 模块）&quot;">​</a></h1><h2 id="_1-模块作用" tabindex="-1">1. 模块作用 <a class="header-anchor" href="#_1-模块作用" aria-label="Permalink to &quot;1. 模块作用&quot;">​</a></h2><ul><li>提供统一缓存接口，支持本地缓存、Redis 缓存等多种实现</li><li>支持缓存工具类、统一缓存服务</li></ul><h2 id="_2-主要功能" tabindex="-1">2. 主要功能 <a class="header-anchor" href="#_2-主要功能" aria-label="Permalink to &quot;2. 主要功能&quot;">​</a></h2><ul><li>ICacheService 缓存接口</li><li>LocalCacheServiceImpl 本地缓存实现</li><li>RedisCacheServiceImpl Redis 缓存实现</li><li>UnifiedCacheServiceImpl 统一缓存服务</li><li>CacheUtils 工具类</li></ul><h2 id="_3-用法示例" tabindex="-1">3. 用法示例 <a class="header-anchor" href="#_3-用法示例" aria-label="Permalink to &quot;3. 用法示例&quot;">​</a></h2><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Autowired</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ICacheService cacheService;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cacheService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;value&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cacheService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="_4-扩展点" tabindex="-1">4. 扩展点 <a class="header-anchor" href="#_4-扩展点" aria-label="Permalink to &quot;4. 扩展点&quot;">​</a></h2><ul><li>实现 ICacheService 可自定义缓存实现</li><li>支持多级缓存、分布式缓存扩展</li></ul><h2 id="_5-常见问题" tabindex="-1">5. 常见问题 <a class="header-anchor" href="#_5-常见问题" aria-label="Permalink to &quot;5. 常见问题&quot;">​</a></h2><ul><li><strong>如何切换缓存类型？</strong> 配置 <code>ic.cache.type</code> 为 local 或 redis。</li></ul><hr><blockquote><p>详细用法请参考源码及注释。</p></blockquote>`,13)]))}const E=i(t,[["render",h]]);export{k as __pageData,E as default};
