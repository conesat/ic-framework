import{_ as i,c as s,o as t,ae as e}from"./chunks/framework.Dgg8-8ov.js";const u=JSON.parse('{"title":"权限体系说明（auth 模块）","description":"","frontmatter":{},"headers":[],"relativePath":"docs/auth/auth.md","filePath":"docs/auth/auth.md"}'),l={name:"docs/auth/auth.md"};function n(h,a,r,p,o,k){return t(),s("div",null,a[0]||(a[0]=[e(`<h1 id="权限体系说明-auth-模块" tabindex="-1">权限体系说明（auth 模块） <a class="header-anchor" href="#权限体系说明-auth-模块" aria-label="Permalink to &quot;权限体系说明（auth 模块）&quot;">​</a></h1><h2 id="_1-模块作用" tabindex="-1">1. 模块作用 <a class="header-anchor" href="#_1-模块作用" aria-label="Permalink to &quot;1. 模块作用&quot;">​</a></h2><ul><li>提供统一的权限认证体系，支持注解式权限校验</li><li>支持用户、角色、权限分组管理</li><li>提供权限初始化、拦截器、ThreadLocal 上下文等能力</li></ul><h2 id="_2-主要功能" tabindex="-1">2. 主要功能 <a class="header-anchor" href="#_2-主要功能" aria-label="Permalink to &quot;2. 主要功能&quot;">​</a></h2><ul><li>注解式权限校验（@RequireAuth、@PermissionInit 等）</li><li>权限拦截器自动拦截请求</li><li>用户上下文（JwtContext）管理</li><li>权限初始化与扩展（PermissionInit、IPermissionInitService）</li></ul><h2 id="_3-用法示例" tabindex="-1">3. 用法示例 <a class="header-anchor" href="#_3-用法示例" aria-label="Permalink to &quot;3. 用法示例&quot;">​</a></h2><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RequireAuth</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GetMapping</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/api/secure&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">secureApi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 需要登录和权限</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ok&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="_4-扩展点" tabindex="-1">4. 扩展点 <a class="header-anchor" href="#_4-扩展点" aria-label="Permalink to &quot;4. 扩展点&quot;">​</a></h2><ul><li>实现 IOnlineUserService 可自定义用户体系</li><li>实现 ISystemVerifyService 可自定义系统校验</li><li>可自定义权限注解和拦截逻辑</li></ul><h2 id="_5-常见问题" tabindex="-1">5. 常见问题 <a class="header-anchor" href="#_5-常见问题" aria-label="Permalink to &quot;5. 常见问题&quot;">​</a></h2><ul><li><strong>如何自定义权限校验？</strong> 实现相关接口并在配置中指定即可。</li></ul><hr><blockquote><p>详细用法请参考源码及注释。</p></blockquote>`,13)]))}const c=i(l,[["render",n]]);export{u as __pageData,c as default};
